{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ilimilku/Projects/gntreader-rngp/client/gntreader/GNT-Reader-React-Native-Client/components/verse-modal.js\";\n\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Item from \"./item\";\nimport { useQuery } from \"react-apollo\";\nimport { getVersesQuery } from \"./queries\";\n\nvar VerseModal = function VerseModal(props) {\n  var _useQuery = useQuery(getVersesQuery, {\n    variables: {\n      bookNumber: parseInt(props.bookNumber),\n      chapterNumber: parseInt(props.chapterNumber)\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 31\n    }\n  }, \"Loading...\"));\n  if (error) return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, \"Error! \", error.message));\n  console.log(data);\n  console.log(props);\n  if (!props.visible) return null;\n  var verses = [];\n\n  if (data) {\n    for (var i = props.startingVerse; i <= data.chapter.numVerses; i++) {\n      verses.push(i.toString());\n    }\n\n    console.log(verses);\n  }\n\n  var RenderVerse = function RenderVerse(_ref) {\n    var item = _ref.item;\n    return React.createElement(Item, {\n      item: item,\n      onPress: function onPress() {\n        return props.onSelect(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: props.visible,\n    onRequestClose: function onRequestClose() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(FlatList, {\n    data: verses,\n    renderItem: RenderVerse,\n    keyExtractor: function keyExtractor(item) {\n      return item;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    marginVertical: 20,\n    marginHorizontal: 0,\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderColor: 'transparent',\n    borderRadius: 20,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  modalContainer: {}\n});\nexport default VerseModal;","map":{"version":3,"sources":["/Users/ilimilku/Projects/gntreader-rngp/client/gntreader/GNT-Reader-React-Native-Client/components/verse-modal.js"],"names":["React","Item","useQuery","getVersesQuery","VerseModal","props","variables","bookNumber","parseInt","chapterNumber","loading","error","data","message","console","log","visible","verses","i","startingVerse","chapter","numVerses","push","toString","RenderVerse","item","onSelect","styles","modalContainer","modalView","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","marginVertical","marginHorizontal","backgroundColor","borderWidth","borderColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {FlatList, Modal, StyleSheet, Text, View} from \"react-native\";\nimport Item from \"./item\";\nimport {useQuery} from \"react-apollo\";\nimport {getVersesQuery} from \"./queries\";\n\nconst VerseModal = (props) => {\n\n    const {loading, error, data } = useQuery(getVersesQuery, {\n        variables: {\n            bookNumber: parseInt(props.bookNumber),\n            chapterNumber: parseInt(props.chapterNumber)\n        }\n    });\n\n    if (loading) return <View><Text>Loading...</Text></View>;\n    if (error) return <View><Text>Error! {error.message}</Text></View>;\n\n    console.log(data)\n\n    console.log(props);\n    if(!props.visible)\n        return null;\n\n    let verses = [];\n\n    if(data) {\n        for(let i=props.startingVerse; i<=data.chapter.numVerses; i++)\n            verses.push(i.toString());\n        console.log(verses);\n    }\n\n\n    const RenderVerse = ({item}) => {\n        return <Item item={item} onPress={() => props.onSelect(item)} />\n    }\n\n    return (\n        <View style={styles.modalContainer}>\n            <Modal\n                animationType={\"slide\"}\n                transparent={true}\n                visible={props.visible}\n                onRequestClose={() => {\n                }}>\n                <View style={styles.modalView}>\n                    <FlatList\n                        data={verses}\n                        renderItem={RenderVerse}\n                        keyExtractor={item => item}\n                    />\n                </View>\n            </Modal>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        marginVertical: 20,\n        marginHorizontal: 0,\n        backgroundColor: \"white\",\n        borderWidth: 0,\n        borderColor: 'transparent',\n        borderRadius: 20,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n    },\n    modalContainer: {\n\n    }\n});\n\nexport default VerseModal\n"]},"metadata":{},"sourceType":"module"}