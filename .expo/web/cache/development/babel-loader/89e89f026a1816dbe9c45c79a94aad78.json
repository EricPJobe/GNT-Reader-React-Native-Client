{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    mutation DeleteFlashcard {\\n        deleteFlashcard(id: 3) {\\n            errors {\\n                message\\n            }\\n            deletedFlashcardId\\n        }\\n    }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    mutation UpdateFlashcard($pos: String, $parsing: String, $word: String, $lemma: String, $gloss: String, $isActive: Boolean, $levelLearned: Int) {\\n        updateFlashcard(input: {\\n            pos: $pos,\\n            parsing: $parsing,\\n            word: $word,\\n            lemma: $lemma,\\n            gloss: $gloss,\\n            isActive: $isActive,\\n            levelLearned: $levelLearned\\n        }) {\\n            errors {\\n                message\\n            }\\n            flashcard {\\n                word\\n            }\\n        }\\n    } \\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    mutation CreateFlashcard($pos: String, $parsing: String, $word: String, $lemma: String, $gloss: String, $isActive: Boolean, $levelLearned: Int) {\\n        createFlashcard(input: {\\n            pos: $pos,\\n            parsing: $parsing,\\n            word: $word,\\n            lemma: $lemma,\\n            gloss: $gloss,\\n            isActive: $isActive,\\n            levelLearned: $levelLearned\\n        }) {\\n            errors {\\n                message\\n            }\\n            flashcard {\\n                word\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query GetWords($referenceFrom: String, $referenceTo: String) {\\n        words(referenceFrom: $referenceFrom, referenceTo: $referenceTo) {\\n            id\\n            reference\\n            pos\\n            parsing\\n            text\\n            word\\n            normalized\\n            lemma\\n            gloss\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query GetVerses($bookNumber: Int, $chapterNumber: Int) {\\n        chapter(bookNumber: $bookNumber, chapterNumber: $chapterNumber) {\\n            numVerses\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n    query GetBooks {\\n        books {\\n            bookId\\n            bookName\\n            numChapters\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from \"@apollo/client\";\nexport var getBooksQuery = gql(_templateObject());\nexport var getVersesQuery = gql(_templateObject2());\nexport var getWordsQuery = gql(_templateObject3());\nexport var createFlashcardMutation = gql(_templateObject4());\nexport var UpdateFlashcard = gql(_templateObject5());\nexport var DeleteFlashcard = gql(_templateObject6());","map":{"version":3,"sources":["/Users/ilimilku/Projects/gntreader-rngp/client/gntreader/GNT-Reader-React-Native-Client/components/queries.js"],"names":["gql","getBooksQuery","getVersesQuery","getWordsQuery","createFlashcardMutation","UpdateFlashcard","DeleteFlashcard"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,GAAR,QAAkB,gBAAlB;AAEA,OAAO,IAAMC,aAAa,GAAGD,GAAH,mBAAnB;AAUP,OAAO,IAAME,cAAc,GAAGF,GAAH,oBAApB;AAQP,OAAO,IAAMG,aAAa,GAAGH,GAAH,oBAAnB;AAgBP,OAAO,IAAMI,uBAAuB,GAAGJ,GAAH,oBAA7B;AAoBP,OAAO,IAAMK,eAAe,GAAGL,GAAH,oBAArB;AAqBP,OAAO,IAAMM,eAAe,GAAGN,GAAH,oBAArB","sourcesContent":["import {gql} from \"@apollo/client\";\n\nexport const getBooksQuery = gql`\n    query GetBooks {\n        books {\n            bookId\n            bookName\n            numChapters\n        }\n    }\n`\n\nexport const getVersesQuery = gql`\n    query GetVerses($bookNumber: Int, $chapterNumber: Int) {\n        chapter(bookNumber: $bookNumber, chapterNumber: $chapterNumber) {\n            numVerses\n        }\n    }\n`\n\nexport const getWordsQuery = gql`\n    query GetWords($referenceFrom: String, $referenceTo: String) {\n        words(referenceFrom: $referenceFrom, referenceTo: $referenceTo) {\n            id\n            reference\n            pos\n            parsing\n            text\n            word\n            normalized\n            lemma\n            gloss\n        }\n    }\n`\n\nexport const createFlashcardMutation = gql`\n    mutation CreateFlashcard($pos: String, $parsing: String, $word: String, $lemma: String, $gloss: String, $isActive: Boolean, $levelLearned: Int) {\n        createFlashcard(input: {\n            pos: $pos,\n            parsing: $parsing,\n            word: $word,\n            lemma: $lemma,\n            gloss: $gloss,\n            isActive: $isActive,\n            levelLearned: $levelLearned\n        }) {\n            errors {\n                message\n            }\n            flashcard {\n                word\n            }\n        }\n    }\n`\nexport const UpdateFlashcard = gql`\n    mutation UpdateFlashcard($pos: String, $parsing: String, $word: String, $lemma: String, $gloss: String, $isActive: Boolean, $levelLearned: Int) {\n        updateFlashcard(input: {\n            pos: $pos,\n            parsing: $parsing,\n            word: $word,\n            lemma: $lemma,\n            gloss: $gloss,\n            isActive: $isActive,\n            levelLearned: $levelLearned\n        }) {\n            errors {\n                message\n            }\n            flashcard {\n                word\n            }\n        }\n    } \n`\n\nexport const DeleteFlashcard = gql`\n    mutation DeleteFlashcard {\n        deleteFlashcard(id: 3) {\n            errors {\n                message\n            }\n            deletedFlashcardId\n        }\n    }\n`\n"]},"metadata":{},"sourceType":"module"}