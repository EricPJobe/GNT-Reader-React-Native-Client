{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ilimilku/Projects/gntreader-rngp/client/gntreader/GNT-Reader-React-Native-Client/components/flashcard-modal.js\";\n\nimport React, { useState } from \"react\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\n\nvar FlashcardModal = function FlashcardModal(props) {\n  var _useState = useState([{\n    name: \"star1\",\n    level: 1,\n    isFilled: false\n  }, {\n    name: \"star2\",\n    level: 2,\n    isFilled: false\n  }, {\n    name: \"star3\",\n    level: 3,\n    isFilled: false\n  }, {\n    name: \"star4\",\n    level: 4,\n    isFilled: false\n  }, {\n    name: \"star5\",\n    level: 5,\n    isFilled: false\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stars = _useState2[0],\n      setStars = _useState2[1];\n\n  var onStarPress = function onStarPress(star) {\n    if (!star.isFilled) {\n      stars.map(function (st) {\n        if (st.level <= star.level) st.isFilled = true;\n        console.log(st);\n      });\n\n      var newStars = _toConsumableArray(stars);\n\n      console.log(newStars);\n      setStars(newStars);\n    }\n\n    props.onSelectLevel();\n  };\n\n  return React.createElement(View, {\n    style: styles.modalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: props.visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"How well do you know \", props.word.word, \"?\"), React.createElement(View, {\n    style: styles.starContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, stars.map(function (star, i) {\n    if (!star.isFilled) {\n      return React.createElement(TouchableWithoutFeedback, {\n        key: star.level,\n        onPress: function onPress() {\n          return onStarPress(star);\n        },\n        style: styles.star,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 45\n        }\n      }, \"u\"));\n    } else {\n      return React.createElement(TouchableWithoutFeedback, {\n        key: star.level,\n        onPress: function onPress() {\n          return onStarPress(star);\n        },\n        style: styles.star,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 45\n        }\n      }, \"f\"));\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    marginVertical: 20,\n    marginHorizontal: 0,\n    backgroundColor: \"white\",\n    borderWidth: 0,\n    borderColor: 'transparent',\n    borderRadius: 20,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  starContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: 5\n  },\n  star: {\n    margin: 5\n  }\n});\nexport default FlashcardModal;","map":{"version":3,"sources":["/Users/ilimilku/Projects/gntreader-rngp/client/gntreader/GNT-Reader-React-Native-Client/components/flashcard-modal.js"],"names":["React","useState","FlashcardModal","props","name","level","isFilled","stars","setStars","onStarPress","star","map","st","console","log","newStars","onSelectLevel","styles","modalContainer","visible","modalView","word","starContainer","i","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","marginVertical","marginHorizontal","backgroundColor","borderWidth","borderColor","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","display","flexDirection","margin"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Modal, StyleSheet, View, Text, TouchableWithoutFeedback } from \"react-native\";\n// import \"@fortawesome/fontawesome-free\";\n// import {FontAwesomeIcon} from \"@fortawesome/react-native-fontawesome\";\n// import { faStar } from \"@fortawesome/free-solid-svg-icons\";\n// import { faStar as outlineStar } from \"@fortawesome/free-regular-svg-icons\";\n\nconst FlashcardModal = (props) => {\n    const [stars, setStars] = useState(\n         [\n            {name: \"star1\", level: 1, isFilled: false},\n            {name: \"star2\", level: 2, isFilled: false},\n            {name: \"star3\", level: 3, isFilled: false},\n            {name: \"star4\", level: 4, isFilled: false},\n            {name: \"star5\", level: 5, isFilled: false},\n        ]\n    );\n\n    const onStarPress = (star) => {\n        if(!star.isFilled) {\n            stars.map(st => {\n                if(st.level <= star.level)\n                    st.isFilled = true;\n                console.log(st);\n            });\n            const newStars = [...stars];\n            console.log(newStars);\n            setStars(newStars);\n        }\n        props.onSelectLevel();\n    }\n\n    return (\n        <View style={styles.modalContainer}>\n            <Modal\n                animationType={\"slide\"}\n                transparent={true}\n                visible={props.visible}>\n                <View style={styles.modalView}>\n                    <Text>How well do you know {props.word.word}?</Text>\n                    <View style={styles.starContainer}>\n                        {\n                            stars.map((star, i) => {\n                                if(!star.isFilled) {\n                                    return (\n                                        <TouchableWithoutFeedback key={star.level} onPress={() => onStarPress(star)} style={styles.star}>\n                                            {/*{<FontAwesomeIcon icon={faStar} />}*/}\n                                            <Text>u</Text>\n                                        </TouchableWithoutFeedback>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <TouchableWithoutFeedback key={star.level} onPress={() => onStarPress(star)} style={styles.star}>\n                                            {/*<FontAwesomeIcon icon={outlineStar} />*/}\n                                            <Text>f</Text>\n                                        </TouchableWithoutFeedback>\n                                    )\n                                }\n                            })\n                        }\n                    </View>\n                </View>\n            </Modal>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        marginVertical: 20,\n        marginHorizontal: 0,\n        backgroundColor: \"white\",\n        borderWidth: 0,\n        borderColor: 'transparent',\n        borderRadius: 20,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n    },\n    starContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        margin: 5\n    },\n    star: {\n        margin: 5\n    }\n});\n\nexport default FlashcardModal\n"]},"metadata":{},"sourceType":"module"}