{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ilimilku/Projects/gntreader-rngp/client/gntreader/GNT-Reader-React-Native-Client/components/reader.js\";\n\nimport React, { Component, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ReaderContext from \"../context\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useQuery } from \"react-apollo\";\nimport { getWordsQuery } from \"./queries\";\n\nvar Reader = function Reader(_ref) {\n  var navigation = _ref.navigation;\n  var sortedData = [];\n  var words;\n  var context = {\n    bookName: 'Romans',\n    referenceFrom: '060101',\n    referenceTo: '060102'\n  };\n  var bookName = context.bookName;\n  var chapterFrom = context.referenceFrom.slice(2, 4).replace('0', '');\n  var chapterTo = context.referenceFrom.slice(4).replace('0', '');\n  var verseFrom = context.referenceTo.slice(2, 4).replace('0', '');\n  var verseTo = context.referenceTo.slice(4).replace('0', '');\n\n  var _useQuery = useQuery(getWordsQuery, {\n    variables: {\n      referenceFrom: context.referenceFrom,\n      referenceTo: context.referenceTo\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (data) {\n    console.log(data.words);\n    sortedData = _toConsumableArray(data.words);\n    sortedData.sort(function (a, b) {\n      return a.id - b.id;\n    });\n    console.log(sortedData);\n    words = sortedData.map(function (word) {\n      return React.createElement(View, {\n        key: word.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, React.createElement(Pressable, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.word,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, word.text)));\n    });\n  }\n\n  if (loading) return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }\n  }, \"Loading...\"));\n  if (error) return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"Error! \", error.message));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, bookName, \" \", chapterFrom, \":\", verseFrom, \" - \", chapterTo, \":\", verseTo)), React.createElement(ScrollView, {\n    contentContainerStyle: styles.viewer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, words), React.createElement(View, {\n    style: styles.infoBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  viewer: {\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    height: 30\n  },\n  infoBox: {},\n  word: {\n    margin: 2,\n    borderRadius: 5,\n    backgroundColor: \"#EEEEEE\",\n    padding: 5\n  },\n  wordText: {\n    padding: 5\n  }\n});\nexport default Reader;","map":{"version":3,"sources":["/Users/ilimilku/Projects/gntreader-rngp/client/gntreader/GNT-Reader-React-Native-Client/components/reader.js"],"names":["React","Component","useContext","ReaderContext","useNavigation","useQuery","getWordsQuery","Reader","navigation","sortedData","words","context","bookName","referenceFrom","referenceTo","chapterFrom","slice","replace","chapterTo","verseFrom","verseTo","variables","loading","error","data","console","log","sort","a","b","id","map","word","styles","text","message","container","viewer","infoBox","StyleSheet","create","display","flex","flexDirection","justifyContent","alignItems","centeredView","marginTop","flexWrap","height","margin","borderRadius","backgroundColor","padding","wordText"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from 'react';\nimport {StyleSheet, Text, View, Pressable, ScrollView} from 'react-native';\nimport ReaderContext from \"../context\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {useQuery} from \"react-apollo\";\nimport {getWordsQuery} from \"./queries\";\n\nconst Reader = ({navigation}) => {\n    // const context = useContext(ReaderContext);\n    let sortedData = [];\n    let words;\n    const context = {\n        bookName: 'Romans',\n        referenceFrom: '060101',\n        referenceTo: '060102'\n    }\n    const bookName = context.bookName;\n    const chapterFrom = context.referenceFrom.slice(2,4).replace('0', '');\n    const chapterTo = context.referenceFrom.slice(4).replace('0', '');\n    const verseFrom = context.referenceTo.slice(2,4).replace('0', '');\n    const verseTo = context.referenceTo.slice(4).replace('0', '');\n\n    const {loading, error, data } = useQuery(getWordsQuery, {\n        variables: {\n            referenceFrom: context.referenceFrom,\n            referenceTo: context.referenceTo\n        }\n    });\n\n    if(data) {\n        console.log(data.words);\n        sortedData = [... data.words];\n        sortedData.sort((a,b) => {\n            return a.id - b.id\n        });\n        console.log(sortedData);\n        words = sortedData.map(word => (\n            <View key={word.id}>\n                <Pressable>\n                    <Text style={styles.word}>{word.text}</Text>\n                </Pressable>\n            </View>\n        ));\n\n    }\n\n    if (loading) return <View><Text>Loading...</Text></View>;\n    if (error) return <View><Text>Error! {error.message}</Text></View>;\n\n\n    return (\n\n        <View style={styles.container}>\n            <View><Text>{bookName} {chapterFrom}:{verseFrom} - {chapterTo}:{verseTo}</Text></View>\n            <ScrollView contentContainerStyle={styles.viewer}>\n                {words}\n            </ScrollView>\n            <View style={styles.infoBox}>\n\n            </View>\n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        display: \"flex\",\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    viewer: {\n        flex: 1,\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        height: 30\n    },\n    infoBox: {\n\n    },\n    word: {\n        margin: 2,\n        borderRadius: 5,\n        backgroundColor: \"#EEEEEE\",\n        padding: 5\n    },\n    wordText: {\n\n        padding: 5\n    }\n});\n\n// export default function(props) {\n//     const navigation = useNavigation();\n//     return <Reader {...props} navigation={navigation} />\n// }\n\nexport default Reader;\n"]},"metadata":{},"sourceType":"module"}