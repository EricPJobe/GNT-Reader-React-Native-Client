{"ast":null,"code":"var getParsing = function getParsing(parsing) {\n  console.log(parsing);\n  var parsingCodes = {\n    person: parsing.charAt(0),\n    tense: parsing.charAt(1),\n    voice: parsing.charAt(2),\n    mood: parsing.charAt(3),\n    nounCase: parsing.charAt(4),\n    number: parsing.charAt(5),\n    gender: parsing.charAt(6),\n    degree: parsing.charAt(7)\n  };\n  console.log(parsingCodes);\n  var parsingStrings = {};\n\n  switch (parsingCodes.person) {\n    case '1':\n      parsingStrings.person = '1st';\n      break;\n\n    case '2':\n      parsingStrings.person = '2nd';\n      break;\n\n    case '3':\n      parsingStrings.person = '3rd';\n      break;\n\n    default:\n      parsingStrings.person = undefined;\n      break;\n  }\n\n  switch (parsingCodes.tense) {\n    case 'P':\n      parsingStrings.tense = 'present';\n      break;\n\n    case 'I':\n      parsingStrings.tense = 'imperfect';\n      break;\n\n    case 'F':\n      parsingStrings.tense = 'future';\n      break;\n\n    case 'A':\n      parsingStrings.tense = 'aorist';\n      break;\n\n    case 'X':\n      parsingStrings.tense = 'perfect';\n      break;\n\n    case 'Y':\n      parsingStrings.tense = 'pluperfect';\n      break;\n\n    default:\n      parsingStrings.tense = undefined;\n      break;\n  }\n\n  switch (parsingCodes.voice) {\n    case 'A':\n      parsingStrings.voice = 'active';\n      break;\n\n    case 'M':\n      parsingStrings.voice = 'middle';\n      break;\n\n    case 'P':\n      parsingStrings.voice = 'passive';\n      break;\n\n    default:\n      parsingStrings.poice = undefined;\n      break;\n  }\n\n  switch (parsingCodes.mood) {\n    case 'I':\n      parsingStrings.mood = 'indicative';\n      break;\n\n    case 'D':\n      parsingStrings.mood = 'imperative';\n      break;\n\n    case 'S':\n      parsingStrings.mood = 'subjunctive';\n      break;\n\n    case 'O':\n      parsingStrings.mood = 'optative';\n      break;\n\n    case 'N':\n      parsingStrings.mood = 'infinitive';\n      break;\n\n    case 'P':\n      parsingStrings.mood = 'participle';\n      break;\n\n    default:\n      parsingStrings.mood = undefined;\n      break;\n  }\n\n  switch (parsingCodes.case) {\n    case 'N':\n      parsingStrings.case = 'nominative';\n      break;\n\n    case 'G':\n      parsingStrings.case = 'genitive';\n      break;\n\n    case 'D':\n      parsingStrings.case = 'dative';\n      break;\n\n    case 'A':\n      parsingStrings.case = 'accusative';\n      break;\n\n    default:\n      parsingStrings.case = undefined;\n      break;\n  }\n\n  switch (parsingCodes.number) {\n    case 'S':\n      parsingStrings.number = 'singular';\n      break;\n\n    case 'P':\n      parsingStrings.number = 'plural';\n      break;\n\n    default:\n      parsingStrings.number = undefined;\n      break;\n  }\n\n  switch (parsingCodes.gender) {\n    case 'M':\n      parsingStrings.gender = 'masculine';\n      break;\n\n    case 'F':\n      parsingStrings.gender = 'feminine';\n      break;\n\n    case 'N':\n      parsingStrings.gender = 'neuter';\n      break;\n\n    default:\n      parsingStrings.gender = undefined;\n      break;\n  }\n\n  switch (parsingCodes.degree) {\n    case 'C':\n      parsingStrings.degree = 'comparative';\n      break;\n\n    case 'S':\n      parsingStrings.degree = 'superlative';\n      break;\n\n    default:\n      parsingStrings.degree = undefined;\n      break;\n  }\n\n  console.log(parsingStrings);\n  return parsingStrings;\n};\n\nexport default getParsing;","map":{"version":3,"sources":["/Users/ilimilku/Projects/gntreader-rngp/client/gntreader/GNT-Reader-React-Native-Client/utils/parsing.js"],"names":["getParsing","parsing","console","log","parsingCodes","person","charAt","tense","voice","mood","nounCase","number","gender","degree","parsingStrings","undefined","poice","case"],"mappings":"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","sourcesContent":["const getParsing = (parsing) => {\n    console.log(parsing);\n    const parsingCodes = {\n        person: parsing.charAt(0),\n        tense: parsing.charAt(1),\n        voice: parsing.charAt(2),\n        mood: parsing.charAt(3),\n        nounCase: parsing.charAt(4),\n        number: parsing.charAt(5),\n        gender: parsing.charAt(6),\n        degree: parsing.charAt(7),\n    }\n\n    console.log(parsingCodes);\n\n    let parsingStrings = {};\n    switch (parsingCodes.person) {\n        case '1':\n            parsingStrings.person = '1st';\n            break;\n        case '2':\n            parsingStrings.person = '2nd';\n            break;\n        case '3':\n            parsingStrings.person = '3rd';\n            break;\n        default:\n            parsingStrings.person = undefined;\n            break;\n    }\n\n    switch (parsingCodes.tense) {\n        case 'P':\n            parsingStrings.tense = 'present';\n            break;\n        case 'I':\n            parsingStrings.tense = 'imperfect';\n            break;\n        case 'F':\n            parsingStrings.tense = 'future';\n            break;\n        case 'A':\n            parsingStrings.tense = 'aorist';\n            break;\n        case 'X':\n            parsingStrings.tense = 'perfect';\n            break;\n        case 'Y':\n            parsingStrings.tense = 'pluperfect';\n            break;\n        default:\n            parsingStrings.tense = undefined;\n            break;\n    }\n\n    switch (parsingCodes.voice) {\n        case 'A':\n            parsingStrings.voice = 'active';\n            break;\n        case 'M':\n            parsingStrings.voice = 'middle';\n            break;\n        case 'P':\n            parsingStrings.voice = 'passive';\n            break;\n        default:\n            parsingStrings.poice = undefined;\n            break;\n    }\n\n    switch (parsingCodes.mood) {\n        case 'I':\n            parsingStrings.mood = 'indicative';\n            break;\n        case 'D':\n            parsingStrings.mood = 'imperative';\n            break;\n        case 'S':\n            parsingStrings.mood = 'subjunctive';\n            break;\n        case 'O':\n            parsingStrings.mood = 'optative';\n            break;\n        case 'N':\n            parsingStrings.mood = 'infinitive';\n            break;\n        case 'P':\n            parsingStrings.mood = 'participle';\n            break;\n        default:\n            parsingStrings.mood = undefined;\n            break;\n    }\n\n    switch (parsingCodes.case) {\n        case 'N':\n            parsingStrings.case = 'nominative';\n            break;\n        case 'G':\n            parsingStrings.case = 'genitive';\n            break;\n        case 'D':\n            parsingStrings.case = 'dative';\n            break;\n        case 'A':\n            parsingStrings.case = 'accusative';\n            break;\n        default:\n            parsingStrings.case = undefined;\n            break;\n    }\n\n    switch (parsingCodes.number) {\n        case 'S':\n            parsingStrings.number = 'singular';\n            break;\n        case 'P':\n            parsingStrings.number = 'plural';\n            break;\n        default:\n            parsingStrings.number = undefined;\n            break;\n    }\n\n    switch (parsingCodes.gender) {\n        case 'M':\n            parsingStrings.gender = 'masculine';\n            break;\n        case 'F':\n            parsingStrings.gender = 'feminine';\n            break;\n        case 'N':\n            parsingStrings.gender = 'neuter';\n            break;\n        default:\n            parsingStrings.gender = undefined;\n            break;\n    }\n\n    switch (parsingCodes.degree) {\n        case 'C':\n            parsingStrings.degree = 'comparative';\n            break;\n        case 'S':\n            parsingStrings.degree = 'superlative';\n            break;\n        default:\n            parsingStrings.degree = undefined;\n            break;\n    }\n\n    console.log(parsingStrings);\n    return parsingStrings;\n}\n\nexport default getParsing;\n"]},"metadata":{},"sourceType":"module"}